# pre mount - must enter manually
live_pre_mount () {

sudo su
PART_UBU="/dev/nvme0n1p10"
CRYPT_UBU="ubu_crypt_p10"
MNT_UBU_REL="/mnt/"

cryptsetup luksOpen $PART_UBU $CRYPT_UBU
mount /dev/mapper/$CRYPT_UBU $MNT_UBU

}

# then source_rel
alias source_rel="source /mnt/_bashrc.sh"
alias source_abs="source /_bashrc.sh"

# run pre_chroot
part_str () {
echo "p$1"
}

DISK_GRUB="/dev/nvme0n1"

# ubu
num='10'
PART_UBU=$DISK_GRUB$(part_str $num)
CRYPT_UBU="ubu_crypt_$(part_str $num)"

# boot
num='11'
PART_BOOT=$DISK_GRUB$(part_str $num)
MNT_BOOT='/boot'
MNT_BOOT_REL='/mnt/boot'
# efi
num='1'
PART_EFI=$DISK_GRUB$(part_str $num)
MNT_EFI='/boot/efi'
MNT_EFI_REL='/mnt/boot/efi'

# swap
num='8'
PART_SWAP=$DISK_GRUB$(part_str $num)
CRYPT_SWAP="swap_crypt_$(part_str $num)"
# home
num='7'
PART_HOME=$DISK_GRUB$(part_str $num)
CRYPT_HOME="home_crypt_$(part_str $num)"
MNT_HOME="/home"
MNT_HOME_REL="/mnt/home"
# srv
num='6'
PART_SRV=$DISK_GRUB$(part_str $num)
CRYPT_SRV="srv_crypt_$(part_str $num)"
MNT_SRV="/srv"
MNT_SRV_REL="/mnt/srv"

live_disk_open_crypt () {
# loads the crypt partition and unlocks it - wants the password
# $1 = /dev/part, $2 = crypt
cryptsetup luksOpen $1 $2
}

live_disk_close_crypt () {
# $1 = crypt
cryptsetup luksClose $1
}

live_disk_start_crypt () {
# tries to run the crypt mapper aliases defined in /etc/crypttab
# = check if it will be correctly loaded after boot
# $1 = crypt
cryptdisks_start $1
}

live_disk_stop_crypt () {
# $1 = crypt
cryptdisks_stop $1
}

live_disk_fstab_reload () {
# reloads all but swap from /etc/fstab
mount -a
}

live_disk_fstab_reload_swap () {
# reloads swaps from /etc/fstab
swapon -a
}


live_mount_runtime () {
for f in proc sys dev ; do mount --bind /$f /mnt/$f ; done 
mount -o bind /etc/resolv.conf /mnt/etc/resolv.conf  # to be able to apt update in chrooted env
}
alias live_mnt_rel_srv="mount /dev/mapper/$CRYPT_SRV $MNT_SRV_REL"
alias live_mnt_chr_srv="mount /dev/mapper/$CRYPT_SRV $MNT_SRV"
alias live_mnt_rel_home="mount /dev/mapper/$CRYPT_HOME $MNT_HOME_REL"
alias live_mnt_chr_home="mount /dev/mapper/$CRYPT_HOME $MNT_HOME"

alias live_crypt_setup_open_home=

live_pre_chroot () {

live_mount_runtime

mkdir -p $MNT_EFI_REL
mount $PART_BOOT $MNT_BOOT_REL
mount $PART_EFI $MNT_EFI_REL

cryptsetup luksOpen $PART_SWAP $CRYPT_UBU
cryptsetup luksOpen $PART_HOME $CRYPT_HOME
cryptsetup luksOpen $PART_SRV $CRYPT_SRV

mount | sort | grep mnt
}

live_post_chroot_umount () {
sudo umount /mnt/boot/efi /mnt/boot /mnt/dev /mnt/proc /mnt/sys /mnt/etc/resolv.conf
sudo umount /mnt/home
sudo umount /mnt/srv
sudo umount /mnt
}

live_chroot () {
sudo chroot /mnt
}

live_post_chroot () {
echo "Functions you may wanna call:"
echo "live_reconfigure_encrypted_swap"
echo "live_rc_fstab_crypttab"
echo "live_rc_grub_default"
}

live_rc_fstab_crypttab () {
sudo vi -o /etc/fstab /etc/crypttab
}

live_rc_grub_default () {
sudo vi -o /etc/default/grub
}


live_reconfigure_encrypted_swap () {
# $1 = /dev/part of swap
umount $1
mkswap $1

echo "use the UUID generated by the called mkswap command like this:"
echo "live_reconfigure_encrypted_swap_use_uuid <########-####-####-####-############> <CRYPT_SWAP> $1"
}

live_reconfigure_encrypted_swap_edit_initramfs_resume () {
# default contents = "RESUME=none"
sudo vi /etc/initramfs-tools/conf.d/resume
}


live_reconfigure_encrypted_swap_use_uuid () {
# $1 = UUID number (without UUID=)
# $2 = CRYPT_SWAP = swap partition crypt alias
# $3 = PART_SWAP = swap partition
echo "RESUME=UUID=$1" > /etc/initramfs-tools/conf.d/resume
echo "$2 $3 /dev/random swap,cipher=aes-cbc-essiv:sha256" >> /etc/crypttab

echo "Assure there is only one line with swap partition definition in /etc/crypttab"
cat /etc/crypttab | grep swap
}

live_update_initramfs () {
echo "# update-initramfs -u -k all"
update-initramfs -u -k all
}

live_update_grub () {
echo "# update-grub"
update-grub
}

live_update() {
live_update_initramfs
live_update_grub
}

live_install_grub () {
grub-install --target=x86_64 --efi-directory=/boot/efi
}

alias live_src="source /_bashrc.sh"
alias live_vrc="sudo vi /_bashrc.sh"


live_install_ukuu () {
	sudo apt-add-repository -y ppa:teejee2008/ppa
	sudo apt-get update
	sudo apt-get install ukuu
}

live_ukuu_get_dell_xps_15_kernel_latest () {
# updated on 2018-12-05 - following kernel should be fine
# initrd.img-4.18.3-041803-lowlatency
kernel_str='v4.18.3'
ukuu --list | grep $kernel_str
ukuu --install $kernel_str
}


live_show_initramfs_kernel_versions () {
ls /var/lib/initramfs-tools/
}





LIVE_GRUB_NOPE=$(cat <<EOF
GRUB_DEFAULT=0                                                                                    
GRUB_TIMEOUT_STYLE=hidden                                                                         
GRUB_TIMEOUT=10                                                                                   
GRUB_DISTRIBUTOR=`lsb_release -i -s 2> /dev/null || echo Debian`                                  
                                                                                                  
# GRUB CMDLINE LINUX                                                                              
                                                                                                  
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash acpi_rev_override=1"                                     
GRUB_CMDLINE_LINUX=""                                                                             
                                                                                                  
# possible also "acpi=off"=yes "blacklist=nouveau"=?                                              
# GRUB_CMDLINE_LINUX_DEFAULT="quiet splash noveau.modeset=0 mem_sleep_default=deep noveau.runpm=0"

GRUB_GFXMODE=640x480    
                        
# cryptodisk i have them
GRUB_ENABLE_CRYPTODISK=y
EOF
)

LIVE_FSTAB_MULTI=$(cat <<EOF
# /etc/fstab: static file system information.                                                
#                                                                                            
# Use 'blkid' to print the universally unique identifier for a                               
# device; this may be used with UUID= as a more robust way to name devices                   
# that works even if disks are added and removed. See fstab(5).                              
#                                                                                            
# <file system> <mount point>   <type>  <options>       <dump>  <pass>                       
/dev/mapper/ubu_crypt_p10 /               ext4    errors=remount-ro 0       1                
# /boot was on /dev/nvme0n1p11 during installation                                           
UUID=254477bb-d78d-4ae7-94fd-36f848a001b7 /boot           ext4    defaults        0       2  
# /boot/efi was on /dev/nvme0n1p1 during installation                                        
UUID=0623-79FA  /boot/efi       vfat    umask=0077      0       1                            

/dev/mapper/home_crypt_p7 /home ext4 rw,relatime 0 2
/dev/mapper/srv_crypt_p6 /srv ext4 rw,relatime 0 2

/dev/mapper/swap_crypt_p8 none            swap    sw              0       0                  

VER2

# UBU                                                                                        
/dev/mapper/ubu_crypt_p10 /               ext4    errors=remount-ro 0       1                
                                                                                             
# BOOT                                                                                       
# /boot was on /dev/nvme0n1p11 during installation                                           
# UUID=254477bb-d78d-4ae7-94fd-36f848a001b7 /boot           ext4    defaults        0       2
/dev/nvme0n1p11 /boot ext4 rw,relatime,data=ordered 0 2                                      
                                                                                             
# EFI                                                                                        
# /boot/efi was on /dev/nvme0n1p1 during installation                                        
# UUID=0623-79FA  /boot/efi       vfat    umask=0077      0       1                          
/dev/nvme0n1p1 /boot/efi vfat umask=0077 0 1                                                 
                                                                                             
# HOME                                                                                       
/dev/mapper/home_crypt_p7 /home ext4 rw,relatime 0 2                                         
# SRV                                                                                        
/dev/mapper/srv_crypt_p6 /srv ext4 rw,relatime 0 2                                           
                                                                                             
# SWAP                                                                                       
/dev/mapper/swap_crypt_p8 none            swap    sw              0       0                  
~                                                                                            

EOF
)

LIVE_CRYPTTAB=$(cat <<EOF
ubu_crypt_p10 UUID=4407e329-1589-461c-9237-58f21595dac9 none luks,discard      
home_crypt_p7 UUID=b1e251d2-ca84-474b-ac84-9b67de5fa7e9 none luks               
srv_crypt_p6 UUID=5ef6d864-9ab0-4ad1-87f0-6d291a53d8c6 none luks                
swap_crypt_p8 /dev/nvme0n1p8 /dev/random swap,cipher=aes-cbc-essiv:sha256      
EOF
)


